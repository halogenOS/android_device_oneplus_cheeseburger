type v4a_app, domain;
app_domain(v4a_app)
net_domain(v4a_app)
bluetooth_domain(v4a_app)

# Rumble rumble, v4a ftw
allow v4a_app rootfs:dir r_file_perms;
allow v4a_app system_data_file:file r_file_perms;
allow v4a_app shell_data_file:dir { getattr search };
allow v4a_app rfs_system_file:dir { getattr search };
allow v4a_app audioserver_service:service_manager find;

# Some apps ship with shared libraries and binaries that they write out
# to their sandbox directory and then execute.
allow v4a_app app_data_file:file { rx_file_perms execmod };

# ASEC
allow v4a_app asec_apk_file:file r_file_perms;
allow v4a_app asec_apk_file:dir r_dir_perms;
# Execute libs in asec containers.
allow v4a_app asec_public_file:file { execute execmod };

# Used by Finsky / Android "Verify Apps" functionality when
# running "adb install foo.apk".
# TODO: Long term, we don't want apps probing into shell data files.
# Figure out a way to remove these rules.
allow v4a_app shell_data_file:file r_file_perms;
allow v4a_app shell_data_file:dir r_dir_perms;

# Read and write system app data files passed over Binder.
# Motivating case was /data/data/com.android.settings/cache/*.jpg for
# cropping or taking user photos.
allow v4a_app system_app_data_file:file { read write getattr };

#
# Rules migrated from old app domains coalesced into v4a_app.
# This includes what used to be media_app, shared_app, and release_app.
#

# Access to /data/media.
allow v4a_app media_rw_data_file:dir create_dir_perms;
allow v4a_app media_rw_data_file:file create_file_perms;

# Traverse into /mnt/media_rw for bypassing FUSE daemon
# TODO: narrow this to just MediaProvider
allow v4a_app mnt_media_rw_file:dir search;

# allow cts to query all services
allow v4a_app servicemanager:service_manager list;

allow v4a_app audioserver_service:service_manager find;
allow v4a_app cameraserver_service:service_manager find;
allow v4a_app drmserver_service:service_manager find;
allow v4a_app mediaserver_service:service_manager find;
allow v4a_app mediaextractor_service:service_manager find;
allow v4a_app mediacodec_service:service_manager find;
allow v4a_app mediadrmserver_service:service_manager find;
allow v4a_app nfc_service:service_manager find;
allow v4a_app radio_service:service_manager find;
allow v4a_app surfaceflinger_service:service_manager find;
allow v4a_app app_api_service:service_manager find;

# Allow GMS core to access perfprofd output, which is stored
# in /data/misc/perfprofd/. GMS core will need to list all
# data stored in that directory to process them one by one.
userdebug_or_eng(`
  allow v4a_app perfprofd_data_file:file r_file_perms;
  allow v4a_app perfprofd_data_file:dir r_dir_perms;
')

# gdbserver for ndk-gdb ptrace attaches to app process.
allow v4a_app self:process ptrace;

# Programs routinely attempt to scan through /system, looking
# for files. Suppress the denials when they occur.
dontaudit v4a_app exec_type:file getattr;

# TODO: switch to meminfo service
allow v4a_app proc_meminfo:file r_file_perms;

# https://code.google.com/p/chromium/issues/detail?id=586021
allow v4a_app proc:file r_file_perms;
# access /proc/net/xt_qtguid/stats
r_dir_file(v4a_app, proc_net)

# Cts: HwRngTest
allow v4a_app sysfs_hwrandom:dir search;
allow v4a_app sysfs_hwrandom:file r_file_perms;

# Allow apps to view preloaded content
allow v4a_app preloads_data_file:dir r_dir_perms;
allow v4a_app preloads_data_file:file r_file_perms;

# Allow AOPT to call module_request
allow v4a_app kernel:system module_request;

# isolated

# Access already open app data files received over Binder or local socket IPC.
allow v4a_app app_data_file:file { read write getattr lock };

allow v4a_app activity_service:service_manager find;
allow v4a_app display_service:service_manager find;
allow v4a_app webviewupdate_service:service_manager find;

allow v4a_app { sdcard_type media_rw_data_file }:file { read write append getattr lock };